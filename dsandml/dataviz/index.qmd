---
title: "Data Visualization"
date: "2024-11-08"
author: Rafiq Islam
categories: [Data Science, Machine Learning, Artificial Intelligence, Data Engineering]
citation: true
search: true
lightbox: true
listing: 
    contents: "/../../dsandml"
    max-items: 3
    type: grid
    categories: true
    date-format: full
    fields: [image, date, title, author, reading-time]  
format: 
    html: default
    ipynb: default
toc-depth: 4
---  

For this data visualization project we use top 5 bank stock price data.  

```{python}
import pandas as pd
import yfinance as yf
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from mywebstyle import plot_style
plot_style('#f4f4f4')
```  

## Data  

```{python}
start = pd.to_datetime('2020-01-01')
end = pd.to_datetime('today')
df = yf.download(['WFC','BAC','JPM','C','GS'], start=start, end=end)
df.index = df.index.date
df.tail()
```  

Now we compute the maximum closing prices of all these 5 banks during this time period  

```{python}
df.xs(key='Close', axis=1, level='Price').max()
```  

Now we compute the returns for each of the stock 

```{python}
# Retrieve the 'Close' prices for each ticker directly
close_prices = df.xs(key='Close', axis=1, level=0)

# Calculate the daily percentage change (returns) for all tickers
returns = close_prices.pct_change()
returns.index = pd.to_datetime(returns.index)

# Display the first few rows of returns
returns.head()

```  

## Visualization  

Let's create a pairplot of the returns  

```{python}
sns.pairplot(returns[1:])
```  

Now to check the maximum and minimum return and on what dates that happened  

```{python}
print('Minimum Return')
print(' ')
print(returns.idxmin())
print(' ')
print('Maximum Return')
print(' ')
print(returns.idxmax())
```    

To find which bank is more risky we can simply check the standard deviations of the returns of each bank  

```{python}
returns.std()
```  

It seems like CITI na groop has the maximum value in the standared deviations. 


Now let's check the distribution of Wells Fargo's return in 2023  

```{python}
return_2023_wf = returns.loc['2023-01-01':'2023-12-31','WFC']
sns.displot(return_2023_wf, color='blue', bins=80, kde=True)
```  

Next, we create the timeseries plot of the closing prices  

```{python}
df.xs(key='Close', axis=1, level='Price').plot(figsize=(9,5))
```


### Trend  

Next we plot moving average for Wells Fargo  

```{python}
wfc = df['Close']['WFC']
start_date = pd.to_datetime('2023-10-10').date()
end_date = pd.to_datetime('2024-10-20').date()
wfc.loc[start_date:end_date].rolling(window=30).mean().plot(
    figsize=(9,5),label='30 Day Avg'
    )
wfc.loc[start_date:end_date].plot(
    label='WFC Close',figsize=(9,5)
    )
plt.legend()
```  

### Price Movement Correlation  

```{python}
sns.heatmap(df.xs(key='Close', axis=1, level='Price').corr(), annot=True)
```  

### Techniqal Analysis Plots  

**Candle PLot**  
```{python}
wfc = df[['Open', 'High', 'Low', 'Close']].xs('WFC', level=1, axis=1)

# Define start and end dates
start_date = pd.to_datetime('2023-10-10').date()
end_date = pd.to_datetime('2024-10-20').date()

wfc_filtered = wfc.loc[start_date:end_date]
wfc_filtered.iplot(kind='candle')

```  

**Bollinger Plot**  

```{python}
wfc_filtered['Close'].ta_plot(study='boll')
```

**Share on**  

::::{.columns}
:::{.column width="33%"}
<a href="https://www.facebook.com/sharer.php?u=https://mrislambd.github.io/dsandml/dataviz/" target="_blank" style="color:#1877F2; text-decoration: none;">
 
{{< fa brands facebook size=3x >}}
</a>
 
:::
 
:::{.column width="33%"}
<a href="https://www.linkedin.com/sharing/share-offsite/?url=https://mrislambd.github.io/dsandml/dataviz/" target="_blank" style="color:#0077B5; text-decoration: none;">
 
{{< fa brands linkedin size=3x >}}
</a>
 
:::
 
:::{.column width="33%"}
<a href="https://www.twitter.com/intent/tweet?url=https://mrislambd.github.io/dsandml/dataviz/" target="_blank" style="color:#1DA1F2; text-decoration: none;">
 
{{< fa brands twitter size=3x >}}
</a>
 
:::
::::
 
<script src="https://giscus.app/client.js"
        data-repo="mrislambd/mrislambd.github.io" 
        data-repo-id="R_kgDOMV8crA"
        data-category="Announcements"
        data-category-id="DIC_kwDOMV8crM4CjbQW"
        data-mapping="pathname"
        data-strict="0"
        data-reactions-enabled="1"
        data-emit-metadata="0"
        data-input-position="bottom"
        data-theme="light"
        data-lang="en"
        crossorigin="anonymous"
        async>
</script>
 
<div id="fb-root"></div>
<script async defer crossorigin="anonymous"
 src="https://connect.facebook.net/en_US/sdk.js#xfbml=1&version=v20.0"></script>
<div class="fb-comments" data-href="https://mrislambd.github.io/dsandml/dataviz/" data-width="750" data-numposts="5"></div>
